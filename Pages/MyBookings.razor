@page "/my-bookings"
@using System.Linq
@using MudBlazor
@using HACKH.Models
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager

<MudCard>
    <MudCardContent>
        <h1>Future bookings</h1>
        <MudDivider />
        <div class="future-bookings">
            @foreach (var futureBooking in FutureBookings)
            {
                <MudCard>
                    <MudCardContent>
                        <h2>@futureBooking.BookingDay - @futureBooking.BookingStartTime- @futureBooking.BookingEndTime</h2>
                        <p>Floor: @futureBooking.FloorNumber</p>
                        <p>ID: @futureBooking.ParkingId</p>
                    </MudCardContent>
                </MudCard>
            }
        </div>
        <MudDivider />
        @*in case we need history in the future*@
        @*<h1>History</h1>
        <MudDivider />
        <div class="past-bookings">
            @foreach (var pastBooking in PastBookings)
            {
                <MudCard>
                    <MudCardContent>
                        <h2>@pastBooking.Date.ToShortDateString() - @pastBooking.TimePeriod</h2>
                        <p>Floor: @pastBooking.FloorNumber</p>
                        <p>ID: @pastBooking.ParkingId</p>
                    </MudCardContent>
                </MudCard>
            }
        </div>*@
    </MudCardContent>
</MudCard>

@code {


    private List<BookingModel> FutureBookings = new List<BookingModel>();
    private List<BookingModel> PastBookings = new List<BookingModel>();

    protected override void OnInitialized()
    {
        var bookings = new List<BookingModel>();
        BookingModel b1 = new BookingModel(new DateTime(2023, 12, 12), new TimeSpan(2, 0, 0), new TimeSpan(4, 0, 0), 3, 3);
        BookingModel b2 = new BookingModel(new DateTime(2023, 09, 12), new TimeSpan(14, 0, 0), new TimeSpan(18, 0, 0), 3, 3);
        BookingModel b3 = new BookingModel(new DateTime(2023, 07, 12), new TimeSpan(7, 0, 0), new TimeSpan(15, 0, 0), 3, 3);
        BookingModel b4 = new BookingModel(new DateTime(2023, 07, 12), new TimeSpan(7, 0, 0), new TimeSpan(15, 0, 0), 3, 3);
        BookingModel b5 = new BookingModel(new DateTime(2023, 06, 12), new TimeSpan(7, 0, 0), new TimeSpan(15, 0, 0), 3, 3);
        BookingModel b6 = new BookingModel(new DateTime(2023, 09, 12), new TimeSpan(7, 0, 0), new TimeSpan(15, 0, 0), 3, 3);
        BookingModel b7 = new BookingModel(new DateTime(2023, 08, 12), new TimeSpan(7, 0, 0), new TimeSpan(15, 0, 0), 3, 3);


        bookings.Add(b1);
        bookings.Add(b2);
        bookings.Add(b3);
        bookings.Add(b4);
        bookings.Add(b5);
        bookings.Add(b6);
        bookings.Add(b7);


        var now = DateTime.Now;
        FutureBookings = bookings.Where(booking => booking.BookingDay > now).ToList();
        PastBookings = bookings.Where(booking => booking.BookingDay <= now).ToList();
    }
  
}
